name: Download package from OBS
description: Download package from OBS
inputs:
  project:
    description: The OBS repository to download package
    required: true

  package:
    description: The package in the repository
    required: true

  repository:
    description: The repository of target
    required: true

  username:
    description: The username of OBS account
    required: true

  password:
    description: The password of OBS account
    required: true

  api:
    description: The api address of OBS instance
    required: false
    default: https://api.opensuse.org

  arch:
    description: The architecture of target package
    required: false
    default: ''

runs:
  using: composite
  steps:
    - name: Install osc
      run: |
        if ! command -v osc > /dev/null
        then
          sudo apt-get update -y
          sudo apt-get install -y osc
        fi
      shell: bash

    - name: Login
      run: |
        XDG_CONFIG_HOME=${XDG_CONFIG_HOME:-$HOME/.config}
        mkdir -p "$XDG_CONFIG_HOME/osc"
        echo [general]\napiurl=${{ inputs.api }} > "$XDG_CONFIG_HOME/osc/oscrc"
        echo [${{ inputs.api }}]\nuser = ${{ inputs.username }}\npass = ${{ inputs.password }} >> "$XDG_CONFIG_HOME/osc/oscrc"
      shell: bash

    - name: Get binaries
      run: |
        arch="${{ inputs.arch }}"
        if [[ -z "$arch" ]]
        then
          arch="$(uname -m)"
        fi
        osc getbinaries \\
          "${{ inputs.project }}" \\
          "${{ inputs.package }}" \\
          "${{ inputs.repository }}" \\
          "$arch"
      shell: bash

    - name: Ensure filename suitable for uploading
      run: |
        find binaries -maxdepth 1 -mindepth 1 -type f -name '*.pkg.tar.*' | while read -r f
        do
          name="$(basename "$f")"
          validname="$name"
          for char in '\:' '\"' '\<' '\>' '\|' '\*' '\?' "$(printf '\r')" "$(printf '\n')"
          do
            validname=${validname//$char/#}
          done
          if [[ "$name" != "$validname" ]]
          then 
            echo "Rewriting $name to $validname..."
            echo "$name" > "binaries/$validname.original.txt"
            mv "binaries/$name" "binaries/$validname"
          fi          
        done
      shell: bash
