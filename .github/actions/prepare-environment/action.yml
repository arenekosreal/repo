name: Prepare environment
description: Prepare environment for building PKGBUILDs
inputs:
  pkgbuild-repo:
    description: The git repository contains PKGBUILD
    required: true
  validpgpkeys:
    description: Where to storage exported GnuPG key
    required: false
    default: gpg-key.asc
outputs:
  artifact-name:
    description: The string which can be used as artifact name
    value: ${{ steps.gen-output.outputs.artifact-name }}

runs:
  using: composite
  steps:
    - name: Prepare directories
      run: |
        rm -rf startdir pkgdest repo
        mkdir -p startdir pkgdest repo
      shell: bash
      
    - name: Download pkgbuild
      run: git clone ${{ inputs.pkgbuild-repo }} startdir
      shell: bash

    - name: Generate empty pacman repository for building with dependency
      uses: ./.github/actions/update-pacman-repo
      with:
        repo: repo/repo.db.tar.gz

    - name: Generate output
      id: gen-output
      run: echo artifact-name=${{ inputs.pkgbuild-repo }} | sed 's|=.*://|=|;s|.git$||;s|/| |g' >> $GITHUB_OUTPUT
      shell: bash

    - name: Scan GnuPG keys in PKGBUILD
      id: gpg-key
      uses: ./.github/actions/scan-gpg-keys
      with:
        directory: startdir

    - name: Obtain GnuPG keys
      if: steps.gpg-key.outputs.validpgpkeys
      run: |
        gpg --recv-keys ${{ steps.gpg-key.outputs.validpgpkeys }}
        gpg --export --armor ${{ steps.gpg-key.outputs.validpgpkeys }} -o ${{ inputs.validpgpkeys }}
      shell: bash
