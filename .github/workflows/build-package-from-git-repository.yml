name: Build package from git repository.
on:
  workflow_call:
    inputs:
      repository:
        required: true
        description: The repository of package.
        type: string
      target-archs:
        required: false
        description: The target architectures in newline to try building
        type: string
      env:
        required: false
        description: The env which will be passed to build action.
        type: string
      bump-pkgrel:
        required: false
        description: How many pkgrels are added to existing.
        type: number
        default: 0
    secrets:
      secret-env:
        description: env but supports secrets.*
        required: false
    outputs:
      artifact-name:
        description: The name of artifact which storage built package(s).
        value: ${{ jobs.build-single-package.outputs.artifact-name }}
  workflow_dispatch:
    inputs:
      repository:
        required: true
        description: The repository of package.
        type: string
      target-archs:
        required: false
        description: The target architectures to try building.
        type: string
      env:
        required: false
        description: The env which will be passed to build action.
        type: string
      bump-pkgrel:
        required: false
        description: How many pkgrels are added to existing.
        type: number
        default: 0
jobs:
  gen-runs-on:
    name: Get runs-ons from target-archs
    runs-on: ubuntu-latest
    outputs:
      runs-on: ${{ steps.gen-runs-on.outputs.runs-on }}
    steps:
      - name: Gen runs-on
        id: gen-runs-on
        run: |
          declare -a runs_ons
          if [[ -z '${{ inputs.target-archs }}' ]]
          then
            runs_ons=(ubuntu-24.04 ubuntu-24.04-arm)
          else
            declare target_arch \
                    x86_64=false \
                    aarch64=false
            while read -r target_arch
            do
              case "$target_arch" in
                x86_64)
                  if ! "$x86_64"
                  then
                    x86_64=true
                    runs_ons+=(ubuntu-24.04)
                  fi
                  ;;
                aarch64)
                  if ! "$aarch64"
                  then
                    aarch64=true
                    runs_ons+=(ubuntu-24.04-arm)
                  fi
                  ;;
                *)
                  if [[ -n "$target_arch" ]]
                  then
                    echo "::error::Unsupported target arch $target_arch."
                    exit 1
                  fi
                  ;;
              esac
            done <<< '${{ inputs.target-archs }}'
          fi
          {
            echo -n runs-on=
            jq --compact-output --null-input --raw-output \
              '$ARGS.positional' --args "${runs_ons[@]}"
          } >> "$GITHUB_OUTPUT"
  build-single-package:
    needs: gen-runs-on
    strategy:
      matrix:
        runs-on: ${{ fromJSON(needs.gen-runs-on.outputs.runs-on) }}
    name: Build ${{ inputs.repository }}
    runs-on: ${{ matrix.runs-on }}
    outputs:
      artifact-name: ${{ steps.build.outputs.artifact-name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Checkout PKGBUILD
        run: |
          git clone "${{ inputs.repository }}" startdir
      - name: Start building
        id: build
        uses: ./.github/actions/build-pkgbuild
        with:
          builddir: startdir
          env: |
            PACKAGER=${{ vars.PACKAGER }}
            ${{ inputs.env }}
            ${{ github.event_name == 'workflow_call' && inputs.secret-env || '' }}
          bump-pkgrel: ${{ inputs.bump-pkgrel }}
