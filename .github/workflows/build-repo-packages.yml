name: Build packages in the repository

on:
  #schedule:
  # - cron: 1 */8 * * *
  workflow_dispatch:
    inputs:
      bump-pkgrel:
        required: false
        type: boolean
        default: false
        description: If bump pkgrel by adding 1 to existing

jobs:
  independent-packages:
    strategy:
      matrix:
        pkgbuild-repo:
          - https://aur.archlinux.org/ares-decrypt.git
          - https://aur.archlinux.org/aria2cd.git
          - https://aur.archlinux.org/ariang-git.git
          - https://aur.archlinux.org/ariang-native-git.git
          - https://aur.archlinux.org/basedpyright.git
          - https://aur.archlinux.org/bcache-tools.git
          - https://aur.archlinux.org/binder_linux-dkms.git
          - https://aur.archlinux.org/btrfs-assistant.git
          - https://aur.archlinux.org/btrfsmaintenance.git
          - https://aur.archlinux.org/caddy-trojan.git
          - https://aur.archlinux.org/carapace.git
          - https://aur.archlinux.org/chromium-extension-plasma-integration.git
          - https://aur.archlinux.org/chromium-extension-web-store.git
          - https://aur.archlinux.org/cloudflarespeedtest.git
          - https://aur.archlinux.org/crow-translate.git
          - https://aur.archlinux.org/csharp-ls.git
          - https://aur.archlinux.org/dendrite.git
          - https://aur.archlinux.org/dockerfile-language-server.git
          - https://aur.archlinux.org/downgrade.git
          - https://aur.archlinux.org/electron22-bin.git
          - https://aur.archlinux.org/fcitx5-pinyin-custom-pinyin-dictionary.git
          - https://aur.archlinux.org/fcitx5-pinyin-moegirl.git
          - https://aur.archlinux.org/ffmpeg-audio-thumbnailer.git
          - https://aur.archlinux.org/find-the-command.git
          - https://aur.archlinux.org/firefox-extension-adguard.git
          - https://aur.archlinux.org/firefox-extension-localcdn.git
          - https://aur.archlinux.org/firefox-extension-plasma-integration.git
          - https://aur.archlinux.org/gpt4all-chat.git
          - https://aur.archlinux.org/hath-rust.git
          - https://aur.archlinux.org/hplip-plugin.git
          - https://aur.archlinux.org/icalingua++-git.git
          - https://aur.archlinux.org/icecream.git
          - https://aur.archlinux.org/icoextract.git
          - https://aur.archlinux.org/jamesdsp.git
          - https://aur.archlinux.org/kde-thumbnailer-apk.git
          - https://aur.archlinux.org/ksmbd-tools.git
          - https://aur.archlinux.org/lyrica.git
          - https://aur.archlinux.org/matrix-sliding-sync.git
          - https://aur.archlinux.org/mongodb-tools.git
          - https://aur.archlinux.org/mpv-memo-git.git
          - https://aur.archlinux.org/mpv-thumbfast-noenabled-git.git
          - https://aur.archlinux.org/mpv-uosc.git
          - https://aur.archlinux.org/naiveproxy.git
          - https://aur.archlinux.org/needrestart.git
          - https://aur.archlinux.org/netcoredbg.git
          - https://aur.archlinux.org/nodejs-jsonlint.git
          - https://aur.archlinux.org/ntfysh.git
          - https://aur.archlinux.org/obs-pipewire-audio-capture.git
          - https://aur.archlinux.org/oh-my-posh.git
          - https://aur.archlinux.org/openwrt-devel.git
          - https://aur.archlinux.org/osc.git
          - https://aur.archlinux.org/paccache-hook.git
          - https://aur.archlinux.org/paru.git
          - https://aur.archlinux.org/pay-respects.git
          - https://aur.archlinux.org/phonon-qt6-mpv.git
          - https://aur.archlinux.org/pipewire-module-xrdp.git
          - https://aur.archlinux.org/pipewire-module-xrdp-git.git
          - https://aur.archlinux.org/plasma-gamemode-git.git
          - https://aur.archlinux.org/plasma6-applets-caraoke-git.git
          - https://aur.archlinux.org/plasma6-wallpapers-wallpaper-engine-git.git
          - https://aur.archlinux.org/podman-desktop.git
          - https://aur.archlinux.org/python-pyclip.git
          - https://aur.archlinux.org/qcm.git
          - https://aur.archlinux.org/rclone-aliyundrive-git.git
          - https://aur.archlinux.org/realitlscanner.git
          - https://aur.archlinux.org/ruffle-nightly.git
          - https://aur.archlinux.org/sing-box.git
          - https://aur.archlinux.org/sing-geoip.git
          - https://aur.archlinux.org/sing-geosite.git
          - https://aur.archlinux.org/spicetify-extensions-rxri-git.git
          - https://aur.archlinux.org/stable-diffusion.cpp-vulkan-git.git
          - https://aur.archlinux.org/systemd-boot-pacman-hook.git
          - https://aur.archlinux.org/systemd-cron.git
          - https://aur.archlinux.org/tcp-brutal-dkms.git
          - https://aur.archlinux.org/uksmd.git
          - https://aur.archlinux.org/unblockneteasemusic-golang-git.git
          - https://aur.archlinux.org/usbguard-notifier-git.git
          - https://aur.archlinux.org/vkdevicechooser.git
          - https://aur.archlinux.org/watt-toolkit-bin.git
          - https://aur.archlinux.org/waylyrics.git
          - https://aur.archlinux.org/wine-wow64.git
          - https://aur.archlinux.org/xdg-ninja.git
          - https://aur.archlinux.org/spotify.git
          - https://aur.archlinux.org/linux-pf.git
          - https://aur.archlinux.org/ayugram-desktop.git

    uses: ./.github/workflows/build-single-package.yml
    with:
      git-repository: ${{ matrix.pkgbuild-repo }}
      bump-pkgrel: ${{ inputs.bump-pkgrel }}

  cinny:
    uses: ./.github/workflows/build-single-package.yml
    with:
      git-repository: https://aur.archlinux.org/cinny.git
      bump-pkgrel: ${{ inputs.bump-pkgrel }}
      env: |
        cinnyBase=/cinny

  spotube:
    uses: ./.github/workflows/build-single-package.yml
    with:
      git-repository: https://aur.archlinux.org/spotube.git
      bump-pkgrel: ${{ inputs.bump-pkgrel }}
      env: |
        MAKEPKG_SPOTUBE_SPOTIFY_SECRETS=${{ secrets.MAKEPKG_SPOTUBE_SPOTIFY_SECRETS }}
        MAKEPKG_SPOTUBE_LASTFM_API_KEY=${{ secrets.MAKEPKG_SPOTUBE_LASTFM_API_KEY }}
        MAKEPKG_SPOTUBE_LASTFM_API_SECRET=${{ secrets.MAKEPKG_SPOTUBE_LASTFM_API_SECRET }}     

  libvgm-git:
    uses: ./.github/workflows/build-single-package.yml
    with:
      git-repository: https://aur.archlinux.org/libvgm-git.git
      bump-pkgrel: ${{ inputs.bump-pkgrel }}

  fooyin:
    needs:
      - libvgm-git
    uses: ./.github/workflows/build-single-package.yml
    with:
      git-repository: https://aur.archlinux.org/fooyin.git
      bump-pkgrel: ${{ inputs.bump-pkgrel }}

  libmongocrypt:
    uses: ./.github/workflows/build-single-package.yml
    with:
      git-repository: https://aur.archlinux.org/libmongocrypt.git
      bump-pkgrel: ${{ inputs.bump-pkgrel }}

  mongosh:
    needs:
      - libmongocrypt
    uses: ./.github/workflows/build-single-package.yml
    with:
      git-repository: https://aur.archlinux.org/mongosh.git
      bump-pkgrel: ${{ inputs.bump-pkgrel }}

  osu-mime:
    uses: ./.github/workflows/build-single-package.yml
    with:
      git-repository: https://aur.archlinux.org/osu-mime.git
      bump-pkgrel: ${{ inputs.bump-pkgrel }}

  osu-lazer-bin:
    needs:
      - osu-mime
    uses: ./.github/workflows/build-single-package.yml
    with:
      git-repository: https://aur.archlinux.org/osu-lazer-bin.git
      bump-pkgrel: ${{ inputs.bump-pkgrel }}

  spicetify-cli:
    uses: ./.github/workflows/build-single-package.yml
    with:
      git-repository: https://aur.archlinux.org/spicetify-cli.git
      bump-pkgrel: ${{ inputs.bump-pkgrel }}

  spicetify-themes:
    needs:
      - spicetify-cli
    strategy:
      matrix:
        pkgbuild-repo:
          - https://aur.archlinux.org/spicetify-theme-nord-git.git
          - https://aur.archlinux.org/spicetify-themes-git.git
    uses: ./.github/workflows/build-single-package.yml
    with:
      git-repository: ${{ matrix.pkgbuild-repo }}
      bump-pkgrel: ${{ inputs.bump-pkgrel }}

  dotnet-core-bin:
    uses: ./.github/workflows/build-single-package.yml
    with:
      git-repository: https://aur.archlinux.org/dotnet-core-bin.git
      bump-pkgrel: ${{ inputs.bump-pkgrel }}

  thrive:
    needs:
      - dotnet-core-bin
    uses: ./.github/workflows/build-single-package.yml
    with:
      git-repository: https://aur.archlinux.org/thrive.git
      bump-pkgrel: ${{ inputs.bump-pkgrel }}

  dotnet-install:
    uses: ./.github/workflows/build-single-package.yml
    with:
      git-repository: https://aur.archlinux.org/dotnet-install.git
      bump-pkgrel: ${{ inputs.bump-pkgrel }}

  watt-toolkit-git:
    needs:
      - dotnet-core-bin
      - dotnet-install
    uses: ./.github/workflows/build-single-package.yml
    with:
      git-repository: https://aur.archlinux.org/watt-toolkit-git.git
      bump-pkgrel: ${{ inputs.bump-pkgrel }}

  libglibutil:
    uses: ./.github/workflows/build-single-package.yml
    with:
      git-repository: https://aur.archlinux.org/libglibutil.git
      bump-pkgrel: ${{ inputs.bump-pkgrel }}

  libgbinder:
    needs:
      - libglibutil
    uses: ./.github/workflows/build-single-package.yml
    with:
      git-repository: https://aur.archlinux.org/libgbinder.git
      bump-pkgrel: ${{ inputs.bump-pkgrel }}

  python-gbinder:
    needs:
      - libgbinder
    uses: ./.github/workflows/build-single-package.yml
    with:
      git-repoository: https://aur.archlinux.org/python-gbinder.git
      bump-pkgrel: ${{ inputs.bump-pkgrel }}

  waydroid:
    needs:
      - python-gbinder
    uses: ./.github/workflows/build-single-package.yml
    with:
      git-repository: https://aur.archlinux.org/waydroid.git
      bump-pkgrel: ${{ inputs.bump-pkgrel }}

  obs-packages:
    name: Get packages built on Open Build Service
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        package:
          - home:ZhangHua:ungoogled-chromium-xdg/ungoogled-chromium-xdg
          - home:ZhangHua/mongodb
    outputs:
      artifact-name: ${{ steps.gen-meta-info.outputs.artifact-name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Parse matrix
        id: parse-matrix
        run: |
          {
            echo -n "project="
            echo "${{ matrix.package }}" | cut -d -f 1
            echo -n "package="
            echo "${{ matrix.package }}" | cut -d -f 2
          } >> "$GITHUB_OUTPUT"

      - name: Get target arch
        id: get-target-arch
        uses: ./.github/actions/get-target-arch

      - name: Create download directory
        run: mkdir -p pkgdest

      - name: Get package
        uses: ./.github/actions/download-obs-binaries
        id: download
        with:
          username: ${{ secrets.OBS_USERNAME }}
          password: ${{ secrets.OBS_PASSWORD }}
          regex: .+\.pkg\.tar\.[0-9a-zA-Z]+
          project: ${{ steps.parse-matrix.outputs.project }}
          repository: ${{ steps.parse-matrix.outputs.package }}
          download-directory: pkgdest
          architecture: ${{ steps.get-target-arch.outputs.target-arch }}

      - name: Generate meta info
        id: gen-meta-info
        run: |
          f="$(echo "${{ steps.download.outputs.files }}" | head -n 1)"
          f="$(echo "$f" | sed 's/${{ steps.parse-matrix.outputs.package }}-//' )"
          f="$(echo "$f" | sed 's/${{ steps.parse-matrix.outputs.package }}-debug-//')"
          f="$(echo "$f" | sed 's/.pkg.tar.*$//')"
          printf "artifact-name=%s %s-%d %s\n" \
            "${{ steps.parse-matrix.outputs.package }}" \
            "$(echo "$f" | cut -d- -f 1)" \
            "$(echo "$f" | cut -d- -f 2)" \
            "${{ steps.get-target-arch.outputs.target-arch }}"
            >> "$GITHUB_OUTPUT"

      - name: Upload artifact
        uses: ./.github/actions/upload-artifacts
        with:
          directory: pkgdest
          name: ${{ steps.gen-meta-info.outputs.artifact-name }}

  libbase58:
    uses: ./.github/workflows/build-single-package.yml
    with:
      git-repository: https://aur.archlinux.org/libbase58.git
      bump-pkgrel: ${{ inputs.bump-pkgrel }}

  libblkmaker:
    needs:
      - libbase58
    uses: ./.github/workflows/build-single-package.yml
    with:
      git-repository: https://aur.archlinux.org/libblkmaker.git
      bump-pkgrel: ${{ inputs.bump-pkgrel }}

  bfgminer-git:
    needs:
      - libbase58
      - libblkmaker
    uses: ./.github/workflows/build-single-package.yml
    with:
      git-repository: https://aur.archlinux.org/bfgminer-git.git
      bump-pkgrel: ${{ inputs.bump-pkgrel }}

  release:
    name: Grab all artifacts and prepare release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-24.04
    needs:
      - independent-packages
      - cinny
      - spotube
      - fooyin
      - mongosh
      - osu-lazer-bin
      - spicetify-themes
      - thrive
      - watt-toolkit-git
      - waydroid
      - obs-packages
      - bfgminer-git
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare directory
        run: mkdir -p pkgdest

      - name: Get target arch
        id: get-target-arch
        uses: ./.github/actions/get-target-arch

      - name: Get date
        id: get-date
        run: echo "date=$(date -u +%F)" >> "$GITHUB_OUTPUT" 

      - name: Download artifacts
        uses: ./.github/actions/download-packages-artifacts
        with:
          directory: pkgdest

      - name: Upload release
        uses: softprops/action-gh-release@v2
        with:
          files: pkgdest/*.pkg.tar.*
          draft: true
          tag_name: ${{ steps.get-target-arch.outputs.target-arch }}-${{ steps.get-date.outputs.date }}
          name: Packages for the repository
          fail_on_unmatched_files: true
