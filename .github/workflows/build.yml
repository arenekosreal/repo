name: Build packages

on:
  #schedule:
  #  - cron: 1 */8 * * *
  workflow_dispatch:

jobs:
  # simple-packages:
  #   name: Build packages which do not have any unofficial-repo dependency
  #   strategy:
  #     matrix:
  #       pkgbuild-repo:
  #         - https://aur.archlinux.org/ares-decrypt.git
  #         - https://aur.archlinux.org/aria2cd.git
  #         - https://aur.archlinux.org/ariang-git.git
  #         - https://aur.archlinux.org/ariang-native-git.git
  #         - https://aur.archlinux.org/dotnet-preview-bin.git
  #         - https://aur.archlinux.org/basedpyright.git
  #         - https://aur.archlinux.org/bcache-tools.git
  #         - https://aur.archlinux.org/binder_linux-dkms.git
  #         - https://aur.archlinux.org/btrfs-assistant.git
  #         - https://aur.archlinux.org/btrfsmaintenance.git
  #         - https://aur.archlinux.org/caddy-trojan.git
  #         - https://aur.archlinux.org/carapace.git
  #         - https://aur.archlinux.org/chromium-extension-plasma-integration.git
  #         - https://aur.archlinux.org/chromium-extension-web-store.git
  #         - https://aur.archlinux.org/cloudflarespeedtest.git
  #         - https://aur.archlinux.org/crow-translate.git
  #         - https://aur.archlinux.org/csharp-ls.git
  #         - https://aur.archlinux.org/dendrite.git
  #         - https://aur.archlinux.org/dockerfile-language-server.git
  #         - https://aur.archlinux.org/dotnet-core-bin.git
  #         - https://aur.archlinux.org/downgrade.git
  #         - https://aur.archlinux.org/electron22-bin.git
  #         - https://aur.archlinux.org/fcitx5-pinyin-custom-pinyin-dictionary.git
  #         - https://aur.archlinux.org/fcitx5-pinyin-moegirl.git
  #         - https://aur.archlinux.org/ffmpeg-audio-thumbnailer.git
  #         - https://aur.archlinux.org/find-the-command.git
  #         - https://aur.archlinux.org/firefox-extension-adguard.git
  #         - https://aur.archlinux.org/firefox-extension-localcdn.git
  #         - https://aur.archlinux.org/firefox-extension-plasma-integration.git
  #         - https://aur.archlinux.org/gpt4all-chat.git
  #         - https://aur.archlinux.org/hath-rust.git
  #         - https://aur.archlinux.org/hplip-plugin.git
  #         - https://aur.archlinux.org/icalingua++-git.git
  #         - https://aur.archlinux.org/icecream.git
  #         - https://aur.archlinux.org/icoextract.git
  #         - https://aur.archlinux.org/jamesdsp.git
  #         - https://aur.archlinux.org/kde-thumbnailer-apk.git
  #         - https://aur.archlinux.org/ksmbd-tools.git
  #         - https://aur.archlinux.org/libmongocrypt.git
  #         - https://aur.archlinux.org/lyrica.git
  #         - https://aur.archlinux.org/matrix-sliding-sync.git
  #         - https://aur.archlinux.org/mongodb-tools.git
  #         - https://aur.archlinux.org/mpv-memo-git.git
  #         - https://aur.archlinux.org/mpv-thumbfast-noenabled-git.git
  #         - https://aur.archlinux.org/mpv-uosc.git
  #         - https://aur.archlinux.org/naiveproxy.git
  #         - https://aur.archlinux.org/needrestart.git
  #         - https://aur.archlinux.org/netcoredbg.git
  #         - https://aur.archlinux.org/nodejs-jsonlint.git
  #         - https://aur.archlinux.org/ntfysh.git
  #         - https://aur.archlinux.org/obs-pipewire-audio-capture.git
  #         - https://aur.archlinux.org/oh-my-posh.git
  #         - https://aur.archlinux.org/openwrt-devel.git
  #         - https://aur.archlinux.org/osc.git
  #         - https://aur.archlinux.org/paccache-hook.git
  #         - https://aur.archlinux.org/paru.git
  #         - https://aur.archlinux.org/pay-respects.git
  #         - https://aur.archlinux.org/phonon-qt6-mpv.git
  #         - https://aur.archlinux.org/pipewire-module-xrdp.git
  #         - https://aur.archlinux.org/pipewire-module-xrdp-git.git
  #         - https://aur.archlinux.org/plasma-gamemode-git.git
  #         - https://aur.archlinux.org/plasma6-applets-caraoke-git.git
  #         - https://aur.archlinux.org/plasma6-wallpapers-wallpaper-engine-git.git
  #         - https://aur.archlinux.org/podman-desktop.git
  #         - https://aur.archlinux.org/python-pyclip.git
  #         - https://aur.archlinux.org/qcm.git
  #         - https://aur.archlinux.org/rclone-aliyundrive-git.git
  #         - https://aur.archlinux.org/realitlscanner.git
  #         - https://aur.archlinux.org/sing-box.git
  #         - https://aur.archlinux.org/sing-geoip.git
  #         - https://aur.archlinux.org/sing-geosite.git
  #         - https://aur.archlinux.org/spicetify-extensions-rxri-git.git
  #         - https://aur.archlinux.org/stable-diffusion.cpp-vulkan-git.git
  #         - https://aur.archlinux.org/systemd-boot-pacman-hook.git
  #         - https://aur.archlinux.org/systemd-cron.git
  #         - https://aur.archlinux.org/tcp-brutal-dkms.git
  #         - https://aur.archlinux.org/uksmd.git
  #         - https://aur.archlinux.org/unblockneteasemusic-golang-git.git
  #         - https://aur.archlinux.org/usbguard-notifier-git.git
  #         - https://aur.archlinux.org/vkdevicechooser.git
  #         - https://aur.archlinux.org/watt-toolkit-bin.git
  #         - https://aur.archlinux.org/waylyrics.git
  #         - https://aur.archlinux.org/wine-wow64.git
  #         - https://aur.archlinux.org/xdg-ninja.git
  #         - https://aur.archlinux.org/linux-pf.git
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #
  #     - name: Run builder
  #       id: build
  #       uses: ./.github/actions/build-pkgbuild-in-container
  #       with:
  #         repo: ${{ matrix.pkgbuild-repo }}
  #
  #     - name: Upload artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: ${{ steps.build.outputs.artifact-name }}
  #         path: pkgdest/*.pkg.tar.*
  #         if-no-files-found: error
  #
  # large-packages:
  #   name: Build packages which require more space
  #   strategy:
  #     matrix:
  #       pkgbuild-repo:
  #         - https://aur.archlinux.org/linux-pf.git
  #         - https://aur.archlinux.org/ayugram-desktop.git
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #
  #     - name: Free space
  #       uses: jlumbroso/free-disk-space@v1.3.1
  #
  #     - name: Run builder
  #       id: build
  #       uses: ./.github/actions/build-pkgbuild-in-container
  #       with:
  #         repo: ${{ matrix.pkgbuild-repo }}
  #
  #     - name: Upload artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: ${{ steps.build.outputs.artifact-name }}
  #         path: pkgdest/*.pkg.tar.*
  #         if-no-files-found: error
  # cinny:
  #   name: Build https://aur.archlinux.org/cinny.git with environment cinnyBase=/cinny
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #
  #     - name: Run builder
  #       id: build
  #       uses: ./.github/actions/build-pkgbuild-in-container
  #       with:
  #         repo: https://aur.archlinux.org/cinny.git
  #         environment: |
  #           cinnyBase=/cinny
  #
  #     - name: Upload artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: ${{ steps.build.outputs.artifact-name }}
  #         path: pkgdest/*.pkg.tar.*
  #         if-no-files-found: error
  # spotube:
  #   name: Build https://aur.archlinux.org/spotube.git with secrets
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #
  #     - name: Run builder
  #       id: build
  #       uses: ./.github/actions/build-pkgbuild-in-container
  #       with:
  #         repo: https://aur.archlinux.org/spotube.git
  #         environment: |
  #           MAKEPKG_SPOTUBE_SPOTIFY_SECRETS=${{ secrets.MAKEPKG_SPOTUBE_SPOTIFY_SECRETS }}
  #           MAKEPKG_SPOTUBE_LASTFM_API_KEY=${{ secrets.MAKEPKG_SPOTUBE_LASTFM_API_KEY }}
  #           MAKEPKG_SPOTUBE_LASTFM_API_SECRET=${{ secrets.MAKEPKG_SPOTUBE_LASTFM_API_SECRET }}
  #
  #     - name: Upload artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: ${{ steps.build.outputs.artifact-name }}
  #         path: pkgdest/*.pkg.tar.*
  #         if-no-files-found: error
  libvgm-git:
    name: Build https://aur.archlinux.org/libvgm-git.git
    runs-on: ubuntu-latest
    outputs:
      artifact-name: ${{ steps.build.outputs.artifact-name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run builder
        id: build
        uses: ./.github/actions/build-pkgbuild-in-container
        with:
          repo: https://aur.archlinux.org/libvgm-git.git

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build.outputs.artifact-name }}
          path: pkgdest/*.pkg.tar.*
          if-no-files-found: error

  fooyin:
    name: Build https://aur.archlinux.org/fooyin.git
    runs-on: ubuntu-latest
    needs:
      - libvgm-git
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get dependencies
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.libvgm-git.outputs.artifact-name }}

      - name: Move dependencies
        run: |
          find '${{ needs.libvgm-git.outputs.artifact-name }}' -maxdepth 0 -mindepth 0 -type f -name '*.pkg.tar.*' -exec cp -v {} . \;
          ls -lR .

      - name: Run builder
        id: build
        uses: ./.github/actions/build-pkgbuild-in-container
        with:
          repo: https://aur.archlinux.org/fooyin.git
          packages: '*.pkg.tar.*'
