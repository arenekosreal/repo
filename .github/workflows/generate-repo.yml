name: Generate pacman repository

on:
  workflow_call:

  workflow_dispatch:

  release:
    types:
      - edited

jobs:
  generate-repo:
    strategy:
      matrix:
        os:
          - ubuntu-24.04
    permissions:
      contents: write
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Import GnuPG private key
        id: import-gpg
        run: |
          declare GPG="gpg --batch --yes --passphrase '${{ secrets.GPG_PRIVATE_KEY_PASSWORD }}'"
          $GPG --import <<< '${{ secrets.GPG_PRIVATE_KEY }}'
          {
            echo -n "fingerprint="
            $GPG --show-key --with-colons <<< '${{ secrets.GPG_PRIVATE_KEY }}' | grep "^sec" | grep "S" | cut -d : -f 5
          } >> "$GITHUB_OUTPUT"

      - name: Export public key
        id: export-gpg
        run: |
          {
            EOF="$(dd if=/dev/urandom bs=15 count=1 status=none | base64)"
            echo "public-key<<$EOF"
            gpg --batch --yes --passphrase '${{ secrets.GPG_PRIVATE_KEY_PASSWORD }}' \
                --export --armor
            echo "$EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Get target arch
        id: get-target-arch
        uses: ./.github/actions/get-target-arch

      - name: Make directory
        run: mkdir -p '${{ github.repository_owner }}'

      - name: Get packages
        if: github.event_name == 'workflow_call'
        uses: ./.github/actions/download-packages-artifacts
        with:
          directory: ${{ github.repository_owner }}

      - name: Get packages
        if: github.event_name != 'workflow_call'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          declare tag='os/${{ steps.get-target-arch.outputs.target-arch }}'
          gh release download --dir '${{ github.repository_owner }}' \
            "$tag"

      - name: Remove generated files
        run: |
          find "${{ github.repository_owner }}" \
            -maxdepth 1 -mindepth 1 ! \( -type f -and -regex ".+\.pkg\.tar\.[0-9a-zA-Z]+" \) \
            -exec rm -rfv {} +

      - name: Sign packages
        run: |
          find "${{ github.repository_owner }}" \
            -maxdepth 1 -mindepth 1 -type f -regex ".+\.pkg\.tar\.[0-9a-zA-Z]+" \
            -exec gpg --batch --yes --passphrase '${{ secrets.GPG_PRIVATE_KEY_PASSWORD }}' --pinentry-mode loopback \
                      --detach-sign --local-user '${{ steps.import-gpg.outputs.fingerprint }}' \
                      --output "{}.sig" "{}" \;

      - name: Generate database
        uses: arenekosreal/pkgbuild-actions/update-pacman-repo@v0.2.6
        with:
          directory: ${{ github.repository_owner }}

      - name: Sign database
        run: |
          declare db="${{ github.repository_owner }}" \
                  compress=".tar.gz" \
                  item
          declare -a items=(files db)
          for item in "${items[@]}"
          do
            declare file="${{ github.repository_owner }}/$db.$item"
            echo "Signing $file..."
            gpg --batch --yes --passphrase '${{ secrets.GPG_PRIVATE_KEY_PASSWORD }}' --pinentry-mode loopback \
              --detach-sign --local-user '${{ steps.import-gpg.outputs.fingerprint }}' \
              --output "$file$compress.sig" "$file$compress"
            ln -srfv "$file$compress" "$file"
          done

      - name: Upload release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          declare tag='os/${{ steps.get-target-arch.outputs.target-arch }}'
          if gh release view "$tag" > /dev/null
          then
            echo "Removing existing release..."
            gh release delete "$tag" --cleanup-tag --yes
          fi
          echo "Creating new release..."
          gh release create "$tag" \
            --generate-notes \
            --notes-from-tag \
            --target '${{ github.sha }}' \
            --title "Release for $rag"
          echo "Uploading files..."
          gh release upload "$tag" \
            '${{ github.repository_owner }}'/* \
            --clobber
